pwd
pwd)()
pwd()
agg(experiment_name="exp1t1-random", number_of_runs=2)
ran <- agg(experiment_name="exp1t1-random", number_of_runs=2)
plotRealCompositionTimes(data_to_plot=ran$agg, sub_title="random")
ran2 <- agg(experiment_name="exp1t2-random", number_of_runs=1)
plotRealCompositionTimes(data_to_plot=ran2, sub_title="1000c - 100c - random")
plotRealCompositionTimes(data_to_plot=ran2$raw, sub_title="1000c - 100c - random")
ran2$raw
ran2$raw[SERVICES_ENGAGED,]
ran2$raw[,SERVICES_ENGAGED]
raw <- ran2$raw
raw
raw[SERVICES_ENGAGED]
raw[raw$SERVICES_ENGAGED]
raw[raw$SERVICES_ENGAGED,]
raw[,raw$SERVICES_ENGAGED]
raw[raw$SERVICES_ENGAGED]
raw$SERVICES_ENGAGED
?split
strsplit(";9911;9997", ";")
factories <- strsplit(";9911;9997", ";")
table(factories)
View(raw)
for (i in raw$SERVICES_ENGAGED ) {  }
t1x <- agg(experiment_name="exp1t1x", number_of_runs=)
t1x <- agg(experiment_name="exp1t1x", number_of_runs=1)
plotRealCompositionTimes(t1x$raw, "100c-10c random - new datafile")
t2x <- agg(experiment_name="exp1t2x", number_of_runs=2)
plotRealCompositionTimes(t2x$agg, "1000c-100c - random X")
source('~/Estudos/phd/software-projects/RobustWorkflows-Actors/docs/exp1/scripts/prepare_experiment_data.R')
e1a <- agg(experiment_name="results_trial1/me1t1a", number_of_runs=1)
e1a <- agg(experiment_name="results_trial1/me1t1a", number_of_runs=1)
raw_data <- read.csv(file="results_trial1/me1t1a")
raw_data <- data.frame(X=1, raw_data)
}
for (i in seq(1:1)) {
raw_data[raw_data$run == i-1,]$X <- seq(1:(nrow(raw_data)/number_of_runs))
}
for (i in seq(1:1)) {
raw_data[raw_data$run == i-1,]$X <- seq(1:(nrow(raw_data)/1))
}
raw_data[raw_data$run == 0,]
View(raw_data)
View(raw_data)
raw_data[,]
raw_data[,]$run = 1
raw_data[raw_data$run == 1,]
raw_data <- data.frame(raw_data, delta=(raw_data$REAL_TIME_TO_SERVE_COMPOSITION-raw_data$EXPECTED_TIME_TO_SERVE_COMPOSITION)/1000)
agg_data_mean <- aggregate(data=raw_data, cbind(EXPECTED_TIME_TO_SERVE_COMPOSITION,REAL_TIME_TO_SERVE_COMPOSITION, delta) ~ X, mean)
agg_data_sd <- aggregate(data=raw_data, cbind(EXPECTED_TIME_TO_SERVE_COMPOSITION,REAL_TIME_TO_SERVE_COMPOSITION, delta) ~ X, sd)
error <- calculateError(agg_mean=agg_data_mean, agg_sd=agg_data_sd, number_of_runs=number_of_runs)
number_of_runs <- 1
error <- calculateError(agg_mean=agg_data_mean, agg_sd=agg_data_sd, number_of_runs=number_of_runs)
error <- error$data
agg_data <- data.frame(agg_data_mean, delta_ymin=error$ymin, delta_ymax=error$ymax)
View(agg_data_mean)
View(agg_data_sd)
View(agg_data)
View(agg_data)
View(raw)
View(raw_data)
View(raw)
View(raw_data)
hist(raw_data$EXPECTED_TIME_TO_SERVE_COMPOSITION)
hist(raw_data$REAL_TIME_TO_SERVE_COMPOSITION)
hist(raw_data$EXPECTED_TIME_TO_SERVE_COMPOSITION/1000)
hist(raw_data$REAL_TIME_TO_SERVE_COMPOSITION/1000)
source('~/Estudos/phd/software-projects/RobustWorkflows-Actors/docs/exp1/scripts/prepare_experiment_data.R')
experiment_name<-"results_trial1/me1t1a"
number_of_runs <- 1
raw_data <- read.csv(file=experiment_name)
raw_data$run <- 1
raw_data <- data.frame(X=1, raw_data)
#
# adds sequence of events to the data from each run
#
for (i in seq(1:number_of_runs)) {
raw_data[raw_data$run == i-1,]$X <- seq(1:(nrow(raw_data)/number_of_runs))
}
#
# Calculates delta, between expected and real execution times
#
raw_data <- data.frame(raw_data, delta=(raw_data$REAL_TIME_TO_SERVE_COMPOSITION-raw_data$EXPECTED_TIME_TO_SERVE_COMPOSITION)/1000)
#agg_data_services_engaged <- aggregate(data=raw_data, cbind()
#bla <- as.data.frame(table(raw_data$CLIENT_AGENT))
agg_data_mean <- aggregate(data=raw_data, cbind(EXPECTED_TIME_TO_SERVE_COMPOSITION,REAL_TIME_TO_SERVE_COMPOSITION, delta) ~ X, mean)
#
# Calculates Error
#
agg_data_sd <- aggregate(data=raw_data, cbind(EXPECTED_TIME_TO_SERVE_COMPOSITION,REAL_TIME_TO_SERVE_COMPOSITION, delta) ~ X, sd)
error <- calculateError(agg_mean=agg_data_mean, agg_sd=agg_data_sd, number_of_runs=number_of_runs)
error <- error$data
agg_data <- data.frame(agg_data_mean, delta_ymin=error$ymin, delta_ymax=error$ymax)
res <- list("raw" = raw_data, "agg" = agg_data)
View(raw_data)
rawt1a <- raw_data
experiment_name <- "results_trial1/me1t1b"
raw_data <- read.csv(file=experiment_name)
#
# adds x column to data frame
#
raw_data <- data.frame(X=1, raw_data)
#
# adds sequence of events to the data from each run
#
for (i in seq(1:number_of_runs)) {
raw_data[raw_data$run == i-1,]$X <- seq(1:(nrow(raw_data)/number_of_runs))
}
#
# Calculates delta, between expected and real execution times
#
raw_data <- data.frame(raw_data, delta=(raw_data$REAL_TIME_TO_SERVE_COMPOSITION-raw_data$EXPECTED_TIME_TO_SERVE_COMPOSITION)/1000)
#agg_data_services_engaged <- aggregate(data=raw_data, cbind()
#bla <- as.data.frame(table(raw_data$CLIENT_AGENT))
agg_data_mean <- aggregate(data=raw_data, cbind(EXPECTED_TIME_TO_SERVE_COMPOSITION,REAL_TIME_TO_SERVE_COMPOSITION, delta) ~ X, mean)
#
# Calculates Error
#
agg_data_sd <- aggregate(data=raw_data, cbind(EXPECTED_TIME_TO_SERVE_COMPOSITION,REAL_TIME_TO_SERVE_COMPOSITION, delta) ~ X, sd)
error <- calculateError(agg_mean=agg_data_mean, agg_sd=agg_data_sd, number_of_runs=number_of_runs)
error <- error$data
agg_data <- data.frame(agg_data_mean, delta_ymin=error$ymin, delta_ymax=error$ymax)
rawt1b <- raw_data
View(rawt1a)
View(rawt1b)
View(rawt1a)
View(rawt1b)
View(rawt1a)
View(rawt1b)
View(rawt1a)
View(rawt1b)
View(rawt1a)
View(rawt1b)
View(rawt1a)
View(rawt1b)
qplot(rawt1b$delta)
qplot(x=seq(1:100), y=rawt1b$delta)
qplot(rawt1b$delta)
qplot(rawt1b$delta, binwidth=30)
qplot(rawt1a$delta, binwidth=30)
qplot(x=seq(1:100), y=rawt1b$REAL_TIME_TO_SERVE_COMPOSITION)
qplot(x=seq(1:100), y=rawt1a$REAL_TIME_TO_SERVE_COMPOSITION)
plot(x=seq(1:100), y=rawt1a$REAL_TIME_TO_SERVE_COMPOSITION)
ggplot() + geom_line(aes(x=seq(1:100), y=rawt1a$REAL_TIME_TO_SERVE_COMPOSITION))
ggplot() + geom_line(aes(x=seq(1:100), y=rawt1a$REAL_TIME_TO_SERVE_COMPOSITION)) + geom_line(aes(x=seq(1:100), y=rawt1b$REAL_TIME_TO_SERVE_COMPOSITION))
ggplot() + geom_line(aes(x=seq(1:100), y=rawt1a$REAL_TIME_TO_SERVE_COMPOSITION)) + geom_line(aes(x=seq(1:100), y=rawt1b$REAL_TIME_TO_SERVE_COMPOSITION), color="blue")
rawt <- agg(experiment_name="results_trial1/me1t1c")
rawt <- agg(experiment_name="results_trial1/me1t1c", number_of_runs=1)
source('~/Estudos/phd/software-projects/RobustWorkflows-Actors/docs/exp1/scripts/prepare_experiment_data.R')
rawt <- agg(experiment_name="results_trial1/me1t1c", number_of_runs=1)
r <- read.csv(file="results_trial1/me1t1c")
r$run <-1
View(r)
source('~/Estudos/phd/software-projects/RobustWorkflows-Actors/docs/exp1/scripts/prepare_experiment_data.R')
rawt <- agg(experiment_name="results_trial1/me1t1c", number_of_runs=1)
raw_data <- read.csv(file="results_trial1/me1t1c"
)
raw_data$run <- 1
#
# adds x column to data frame
#
raw_data <- data.frame(X=1, raw_data)
#
# adds sequence of events to the data from each run
#
for (i in seq(1:number_of_runs)) {
raw_data[raw_data$run == i-1,]$X <- seq(1:(nrow(raw_data)/number_of_runs))
}
#
# Calculates delta, between expected and real execution times
#
raw_data <- data.frame(raw_data, delta=(raw_data$REAL_TIME_TO_SERVE_COMPOSITION-raw_data$EXPECTED_TIME_TO_SERVE_COMPOSITION)/1000)
#agg_data_services_engaged <- aggregate(data=raw_data, cbind()
#bla <- as.data.frame(table(raw_data$CLIENT_AGENT))
agg_data_mean <- aggregate(data=raw_data, cbind(EXPECTED_TIME_TO_SERVE_COMPOSITION,REAL_TIME_TO_SERVE_COMPOSITION, delta) ~ X, mean)
#
# Calculates Error
#
agg_data_sd <- aggregate(data=raw_data, cbind(EXPECTED_TIME_TO_SERVE_COMPOSITION,REAL_TIME_TO_SERVE_COMPOSITION, delta) ~ X, sd)
error <- calculateError(agg_mean=agg_data_mean, agg_sd=agg_data_sd, number_of_runs=number_of_runs)
error <- error$data
agg_data <- data.frame(agg_data_mean, delta_ymin=error$ymin, delta_ymax=error$ymax)
raw_data[raw_data$run == i-1,]$X <- seq(1:(nrow(raw_data)/number_of_runs))
source('~/Estudos/phd/software-projects/RobustWorkflows-Actors/docs/exp1/scripts/prepare_experiment_data.R')
agg(experiment_name="results_trial1/me1t1c")
agg(experiment_name="results_trial1/me1t1c",number_of_runs=1)
rawt1c <- agg(experiment_name="results_trial1/me1t1c",number_of_runs=1)$raw
View(rawt1c)
ggplot() + geom_line(aes(x=seq(1:100), y=rawt1a$REAL_TIME_TO_SERVE_COMPOSITION)) + geom_line(aes(x=seq(1:100), y=rawt1b$REAL_TIME_TO_SERVE_COMPOSITION)) + geom_line(aes(x=seq(1:100), y=rawt1c$REAL_TIME_TO_SERVE_COMPOSITION), color="red")
x <- "abcde"
x(1)
x[1]
x[2]
substr(x, start=1, stop=1)
substr(x, start=2, stop=2)
chr(12)
executions <- 5
agg_data <- data.frame()
x <- "abcdefghijk"
for (i in seq(1:executions)) {
agg_temp <- agg(experiment_name=paste("results_trial1/me1t1", substr(x, start=i, stop=i), sep=''), number_of_runs=1)$raw
agg_temp$X <- i
agg_data <- rbind(agg_data, agg_temp)
}
executions <- 5
agg_data <- data.frame()
x <- "abcdefghijk"
for (i in seq(1:executions)) {
agg_temp <- agg(experiment_name=paste("results_trial1/me1t1", substr(x, start=i, stop=i), sep=''), number_of_runs=1)$raw
agg_temp$X <- i
agg_data <- rbind(agg_data, agg_temp)
}
distribution_compositions <- ggplot(data=agg_data, aes(factor(X), REAL_TIME_TO_SERVE_COMPOSITION/1000)) + geom_boxplot() +
labs(title="Distribution of Composition times by number of concurrent monitoring requests, 100 Clients, 10 Servers", x="Concurrent requests (number)", y="Composition duration (s)")
ggsave(filename="plots/distribution_composition_times.pdf", plot=distribution_compositions)
executions <- 5
agg_data <- data.frame()
x <- "abcdefghijk"
for (i in seq(1:executions)) {
agg_temp <- agg(experiment_name=paste("results_trial1/me1t1", substr(x, start=i, stop=i), sep=''), number_of_runs=1)$raw
agg_temp$X <- i
agg_data <- rbind(agg_data, agg_temp)
}
distribution_compositions <- ggplot(data=agg_data, aes(factor(X), EXPECTED_TIME_TO_SERVE_COMPOSITION/1000)) + geom_boxplot() +
labs(title="Distribution of Composition times by number of concurrent monitoring requests, 100 Clients, 10 Servers", x="Concurrent requests (number)", y="Composition duration (s)")
ggsave(filename="plots/distribution_expected_composition_times.pdf", plot=distribution_compositions)
executions <- 5
agg_data <- data.frame()
x <- "abcdefghijk"
for (i in seq(1:executions)) {
agg_temp <- agg(experiment_name=paste("results_trial1/me1t1", substr(x, start=i, stop=i), sep=''), number_of_runs=1)$raw
agg_temp$X <- i
agg_data <- rbind(agg_data, agg_temp)
}
distribution_compositions <- ggplot(data=agg_data, aes(factor(X), EXPECTED_TIME_TO_SERVE_COMPOSITION/1000)) + geom_boxplot() +
labs(title="Distribution of Expected Composition times by number of concurrent monitoring requests, 100 Clients, 10 Servers", x="Concurrent requests (number)", y="Composition duration (s)")
ggsave(filename="plots/distribution_expected_composition_times100c_10s.pdf", plot=distribution_compositions)
distribution_compositions <- ggplot(data=agg_data, aes(factor(X), REAL_TIME_TO_SERVE_COMPOSITION/1000)) + geom_boxplot() +
labs(title="Distribution of REAL Composition times by number of concurrent monitoring requests, 100 Clients, 10 Servers", x="Concurrent requests (number)", y="Composition duration (s)")
ggsave(filename="plots/distribution_real_composition_times100c_10s.pdf", plot=distribution_compositions)
#
# BoxPlot to compare the Average Composition time for different concurrency levels
# TRIAL 1 100 clients, 10 factories
#
executions <- 5
agg_data <- data.frame()
x <- "abcdefghijk"
for (i in seq(1:executions)) {
agg_temp <- agg(experiment_name=paste("results_trial1/me1t1", substr(x, start=i, stop=i), sep=''), number_of_runs=1)$raw
agg_temp$X <- i
agg_data <- rbind(agg_data, agg_temp)
}
distribution_compositions <- ggplot(data=agg_data, aes(factor(X), EXPECTED_TIME_TO_SERVE_COMPOSITION/1000)) + geom_boxplot() +
labs(title="Distribution of Expected Composition times by number of concurrent monitoring requests, 1000 Clients, 100 Servers", x="Concurrent requests (number)", y="Composition duration (s)")
ggsave(filename="plots/distribution_expected_composition_times1000c_100s.pdf", plot=distribution_compositions)
distribution_compositions <- ggplot(data=agg_data, aes(factor(X), REAL_TIME_TO_SERVE_COMPOSITION/1000)) + geom_boxplot() +
labs(title="Distribution of REAL Composition times by number of concurrent monitoring requests, 1000 Clients, 100 Servers", x="Concurrent requests (number)", y="Composition duration (s)")
ggsave(filename="plots/distribution_real_composition_times1000c_100s.pdf", plot=distribution_compositions)
executions <- 4
agg_data <- data.frame()
x <- "abcdefghijk"
for (i in seq(1:executions)) {
agg_temp <- agg(experiment_name=paste("results_trial1/me1t2", substr(x, start=i, stop=i), sep=''), number_of_runs=1)$raw
agg_temp$X <- i
agg_data <- rbind(agg_data, agg_temp)
}
distribution_compositions <- ggplot(data=agg_data, aes(factor(X), EXPECTED_TIME_TO_SERVE_COMPOSITION/1000)) + geom_boxplot() +
labs(title="Distribution of Expected Composition times by number of concurrent monitoring requests, 100 Clients, 10 Servers", x="Concurrent requests (number)", y="Composition duration (s)")
ggsave(filename="plots/distribution_expected_composition_times100c_10s.pdf", plot=distribution_compositions)
distribution_compositions <- ggplot(data=agg_data, aes(factor(X), REAL_TIME_TO_SERVE_COMPOSITION/1000)) + geom_boxplot() +
labs(title="Distribution of REAL Composition times by number of concurrent monitoring requests, 100 Clients, 10 Servers", x="Concurrent requests (number)", y="Composition duration (s)")
ggsave(filename="plots/distribution_real_composition_times100c_10s.pdf", plot=distribution_compositions)
executions <- 4
agg_data <- data.frame()
x <- "abcdefghijk"
for (i in seq(1:executions)) {
agg_temp <- agg(experiment_name=paste("results_trial1/me1t2", substr(x, start=i, stop=i), sep=''), number_of_runs=1)$raw
agg_temp$X <- i
agg_data <- rbind(agg_data, agg_temp)
}
distribution_compositions <- ggplot(data=agg_data, aes(factor(X), EXPECTED_TIME_TO_SERVE_COMPOSITION/1000)) + geom_boxplot() +
labs(title="Distribution of Expected Composition times by number of concurrent monitoring requests, 100 Clients, 10 Servers", x="Concurrent requests (number)", y="Composition duration (s)")
ggsave(filename="plots/distribution_expected_composition_times100c_10s.pdf", plot=distribution_compositions)
distribution_compositions <- ggplot(data=agg_data, aes(factor(X), REAL_TIME_TO_SERVE_COMPOSITION/1000)) + geom_boxplot() +
labs(title="Distribution of REAL Composition times by number of concurrent monitoring requests, 100 Clients, 10 Servers", x="Concurrent requests (number)", y="Composition duration (s)")
ggsave(filename="plots/distribution_real_composition_times100c_10s.pdf", plot=distribution_compositions)
executions <- 5
agg_data <- data.frame()
x <- "abcdefghijk"
for (i in seq(1:executions)) {
agg_temp <- agg(experiment_name=paste("results_trial1/me1t1", substr(x, start=i, stop=i), sep=''), number_of_runs=1)$raw
agg_temp$X <- i
agg_data <- rbind(agg_data, agg_temp)
}
distribution_compositions <- ggplot(data=agg_data, aes(factor(X), EXPECTED_TIME_TO_SERVE_COMPOSITION/1000)) + geom_boxplot() +
labs(title="Distribution of Expected Composition times by number of concurrent monitoring requests, 100 Clients, 10 Servers", x="Concurrent requests (number)", y="Composition duration (s)")
ggsave(filename="plots/distribution_expected_composition_times100c_10s.pdf", plot=distribution_compositions)
distribution_compositions <- ggplot(data=agg_data, aes(factor(X), REAL_TIME_TO_SERVE_COMPOSITION/1000)) + geom_boxplot() +
labs(title="Distribution of REAL Composition times by number of concurrent monitoring requests, 100 Clients, 10 Servers", x="Concurrent requests (number)", y="Composition duration (s)")
ggsave(filename="plots/distribution_real_composition_times100c_10s.pdf", plot=distribution_compositions)
#
# BoxPlot to compare the Average Composition time for different concurrency levels
# TRIAL 2 1000 clients, 100 factories
#
executions <- 4
agg_data <- data.frame()
x <- "abcdefghijk"
for (i in seq(1:executions)) {
agg_temp <- agg(experiment_name=paste("results_trial1/me1t2", substr(x, start=i, stop=i), sep=''), number_of_runs=1)$raw
agg_temp$X <- i
agg_data <- rbind(agg_data, agg_temp)
}
distribution_compositions <- ggplot(data=agg_data, aes(factor(X), EXPECTED_TIME_TO_SERVE_COMPOSITION/1000)) + geom_boxplot() +
labs(title="Distribution of Expected Composition times by number of concurrent monitoring requests, 1000 Clients, 100 Servers", x="Concurrent requests (number)", y="Composition duration (s)")
ggsave(filename="plots/distribution_expected_composition_times1000c_100s.pdf", plot=distribution_compositions)
distribution_compositions <- ggplot(data=agg_data, aes(factor(X), REAL_TIME_TO_SERVE_COMPOSITION/1000)) + geom_boxplot() +
labs(title="Distribution of REAL Composition times by number of concurrent monitoring requests, 1000 Clients, 100 Servers", x="Concurrent requests (number)", y="Composition duration (s)")
ggsave(filename="plots/distribution_real_composition_times1000c_100s.pdf", plot=distribution_compositions)
executions <- 3
agg_data <- data.frame()
x <- "abcdefghijk"
for (i in seq(1:executions)) {
agg_temp <- agg(experiment_name=paste("results_trial1/me1t3", substr(x, start=i, stop=i), sep=''), number_of_runs=1)$raw
agg_temp$X <- i
agg_data <- rbind(agg_data, agg_temp)
}
distribution_compositions <- ggplot(data=agg_data, aes(factor(X), EXPECTED_TIME_TO_SERVE_COMPOSITION/1000)) + geom_boxplot() +
labs(title="Distribution of Expected Composition times by number of concurrent monitoring requests, 10000 Clients, 1000 Servers", x="Concurrent requests (number)", y="Composition duration (s)")
ggsave(filename="plots/distribution_expected_composition_times10000c_1000s.pdf", plot=distribution_compositions)
distribution_compositions <- ggplot(data=agg_data, aes(factor(X), REAL_TIME_TO_SERVE_COMPOSITION/1000)) + geom_boxplot() +
labs(title="Distribution of REAL Composition times by number of concurrent monitoring requests, 10000 Clients, 1000 Servers", x="Concurrent requests (number)", y="Composition duration (s)")
ggsave(filename="plots/distribution_real_composition_times10000c_1000s.pdf", plot=distribution_compositions)
summary(rawt1a$delta)
summary(rawt1b$delta)
summary(rawt1c$delta)
summary(rawt1d$delta)
summary(rawt1a$REAL_TIME_TO_SERVE_COMPOSITION)
summary(rawt1b$REAL_TIME_TO_SERVE_COMPOSITION)
summary(rawt1c$REAL_TIME_TO_SERVE_COMPOSITION)
profits <- c(37031, 12920,11116,9620,8173)
hist(profits)
qplot(profits)
library(ggplot2)
qplot(profits)
qplot(profits,geom=c("barplot"))
ggplot(data.frame(x=1:5, y=profits)) + geom_bar()
ggplot(data=data.frame(x=1:5, y=profits), aes(x=x, y=y)) + geom_bar()
ggplot(data=data.frame(x=1:5, y=profits), aes(x=x)) + geom_bar()
ggplot(data=data.frame(x=1:5, y=profits), aes(x=y)) + geom_bar()
ggplot(data=data.frame(x=1:5, y=profits), aes(x=x, y=y)) + geom_bar(stat="identity")
a <- 200
a / 1:10
a / (1:10)
a * 1:10
a * 0.01:1
a * seq(0.01:1, step=0.1)
a * seq(0.01, 1, step=0.1)
?seq
a * seq(0.01, 1, by=0.1)
a * seq(0.1, 1, by=0.1)
a * seq(0.1, 1, by=0.1)
1/10
a * seq(0.0.5, 1, by=0.05)
a * seq(0.05, 1, by=0.05)
250 * seq(0.05, 1, by=0.05)
floor(250 * seq(0.05, 1, by=0.05))
source('~/Estudos/phd/software-projects/RobustWorkflows-Actors/docs/exp1/scripts/prepare_experiment_data.R')
t250 <- agg(experiment_name="raw_results_data/t250", number_of_runs=1)
t250$agg
d <- list()
d[1] <- 2
d[2] <- 929292
d
d <- c("jajaja", "kkk")
d
d(1)
d[1]
d[2]
for (i in d) { print i}
for (i in d) { print(i)}
for (i in d) { print(i) }
trials <- c("t250", "t1000", "t4000")
agg_data <- data.frame()
for (i in trials {
agg_temp <- agg(experiment_name=paste("raw_results_data/", i, sep=''), number_of_runs=1)$raw
agg_temp$X <- i
agg_data <- rbind(agg_data, agg_temp)
}
#
trials <- c("t250", "t1000", "t4000")
agg_data <- data.frame()
for (i in trials) {
agg_temp <- agg(experiment_name=paste("raw_results_data/", i, sep=''), number_of_runs=1)$raw
agg_temp$X <- i
agg_data <- rbind(agg_data, agg_temp)
}
View(agg_data)
distribution_compositions <- ggplot(data=agg_data, aes(factor(X), EXPECTED_TIME_TO_SERVE_COMPOSITION/1000)) + geom_boxplot() +
labs(title="Distribution of Expected Composition times by number of concurrent monitoring requests, 100 Clients, 10 Servers", x="Concurrent requests (number)", y="Composition duration (s)")
distribution_compositions
distribution_compositions <- ggplot(data=agg_data, aes(factor(X), delta/1000)) + geom_boxplot() +
labs(title="Delta in expected versus real composition time", x="Number of Component Services", y="Composition duration (s)")
distribution_compositions
distribution_compositions + scale_x_discrete(breaks=c("t250", "t1000", "t4000"))
distribution_compositions + scale_x_discrete(breaks=c("t250", "t1000", "t4000"), labels=c("t250", "t1000", "t4000"))
a <- distribution_compositions + scale_x_discrete(breaks=c("t250", "t1000", "t4000"), labels=c("t250", "t1000", "t4000"))
a
trials <- c("t250", "t1000", "t4000")
agg_data <- data.frame()
i <- 1
for (trial in trials) {
agg_temp <- agg(experiment_name=paste("raw_results_data/", trial, sep=''), number_of_runs=1)$raw
agg_temp$X <- i
i <- i+1
agg_data <- rbind(agg_data, agg_temp)
}
distribution_compositions <- ggplot(data=agg_data, aes(factor(X), delta/1000)) + geom_boxplot() +
scale_x_discrete(breaks=c(2, 1, 3), labels=c(1, 2, 3)) +
labs(title="Delta in expected versus real composition time", x="Number of Component Services", y="Composition duration (s)")
trials <- c("t250", "t1000", "t4000")
agg_data <- data.frame()
i <- 1
for (trial in trials) {
agg_temp <- agg(experiment_name=paste("raw_results_data/", trial, sep=''), number_of_runs=1)$raw
agg_temp$X <- i
i <- i+1
agg_data <- rbind(agg_data, agg_temp)
}
distribution_compositions <- ggplot(data=agg_data, aes(factor(X), delta/1000)) + geom_boxplot() +
scale_x_discrete(breaks=c(2, 1, 3), labels=c(1, 2, 3)) +
labs(title="Delta in expected versus real composition time", x="Number of Component Services", y="Composition duration (s)")
distribution_compositions
distribution_compositions <- ggplot(data=agg_data, aes(factor(X), delta/1000)) + geom_boxplot() +
#  scale_x_discrete(breaks=c(2, 1, 3), labels=c(1, 2, 3)) +
labs(title="Delta in expected versus real composition time", x="Number of Component Services", y="Composition duration (s)")
distribution_compositions
trials <- c("t250", "t1000", "t4000")
agg_data <- data.frame()
i <- 1
for (trial in trials) {
agg_temp <- agg(experiment_name=paste("raw_results_data/", trial, sep=''), number_of_runs=1)$raw
agg_temp$X <- i
i <- i+1
agg_data <- rbind(agg_data, agg_temp)
}
distribution_compositions <- ggplot(data=agg_data, aes(factor(X), delta/1000)) + geom_boxplot() +
#  scale_x_discrete(breaks=c(2, 1, 3), labels=c(1, 2, 3)) +
labs(title="Delta in expected versus real composition time", x="Number of Component Services", y="Composition duration (s)")
distribution_compositions
View(agg_temp)
View(agg_data)
unset(distribution_compositions)
trials <- c("t250", "t1000", "t4000")
agg_data <- data.frame()
i <- 1
for (trial in trials) {
agg_temp <- agg(experiment_name=paste("raw_results_data/", trial, sep=''), number_of_runs=1)$raw
agg_temp$X <- i
i <- i+1
agg_data <- rbind(agg_data, agg_temp)
}
distribution_compositions <- ggplot(data=agg_data, aes(factor(X), delta/1000)) + geom_boxplot() +
scale_x_discrete(labels=c("1" = "250", "2" = "1000", "3" = "4000")) +
labs(title="Delta in expected versus real composition time", x="Number of Component Services", y="Composition duration (s)")
distribution_compositions
#
# BoxPlot to compare the Average Composition different network sizes
#
unset(distribution_compositions)
trials <- c("t250", "t1000", "t4000")
agg_data <- data.frame()
i <- 1
for (trial in trials) {
agg_temp <- agg(experiment_name=paste("raw_results_data/", trial, sep=''), number_of_runs=1)$raw
agg_temp$X <- i
i <- i+1
agg_data <- rbind(agg_data, agg_temp)
}
distribution_compositions <- ggplot(data=agg_data, aes(factor(X), delta/1000)) + geom_boxplot() +
scale_x_discrete(labels=c("1" = "250", "2" = "1000", "3" = "4000")) +
labs(title="Delta in expected versus real composition time", x="Number of Component Services", y="Mean delta (Real - Expected) Composition Duration (s)")
distribution_compositions
unset(distribution_compositions)
trials <- c("t250", "t1000", "t4000")
agg_data <- data.frame()
i <- 1
for (trial in trials) {
agg_temp <- agg(experiment_name=paste("raw_results_data/", trial, sep=''), number_of_runs=1)$raw
agg_temp$X <- i
i <- i+1
agg_data <- rbind(agg_data, agg_temp)
}
distribution_compositions <- ggplot(data=agg_data, aes(factor(X), delta)) + geom_boxplot() +
scale_x_discrete(labels=c("1" = "250", "2" = "1000", "3" = "4000")) +
labs(title="Delta in expected versus real composition time", x="Number of Component Services", y="Mean delta (Real - Expected) Composition Duration (s)")
distribution_compositions
unset(distribution_compositions)
trials <- c("t250", "t1000", "t4000")
agg_data <- data.frame()
i <- 1
for (trial in trials) {
agg_temp <- agg(experiment_name=paste("raw_results_data/", trial, sep=''), number_of_runs=1)$raw
agg_temp$X <- i
i <- i+1
agg_data <- rbind(agg_data, agg_temp)
}
distribution_compositions <- ggplot(data=agg_data, aes(factor(X), delta)) + geom_boxplot() +
scale_x_discrete(labels=c("1" = "250", "2" = "1000", "3" = "4000")) +
labs(title="Delta in expected versus real composition time", x="Number of Component Services", y="Mean delta (Real - Expected) Composition Duration (s)")
distribution_compositions
