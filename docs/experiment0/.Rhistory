package.install('ggplo2')
install.packages('ggplot2')
set.seed(1440)
dsmall <- diamonds[sample(nrow(diamonds), 100), ]
diamonds
install.packages('dataset')
install.packages('datasets')
cars
diamonds
data(diamond)
data(diamonds)
?qplot
?qplot
library('ggplo2')
library('ggplot2')
diamonds
nrow(diamonds)
?sample
?nrow
sample(200,100)
?sample
diamonds[1,2,]
diamonds[1,]
diamonds[c(1,2),]
set.seed(1410)
dsmall <- diamonds[sample(nrow(diamonds), 100), ]
qplot(carat, price, data = diamonds)
qplot(carat, price, data = dsmall)
dsmall
qplot(carat, x*y*z, data=dsmall)
qplot(carat, x*y*z, data=diamonds)
aplot(carat, price, data = dsmall, colour= color)
qplot(carat, price, data = dsmall, colour= color)
qplot(carat, price, data = dsmall, colour=color, shape=cut)
qplot(carat, price, data = dsmall,  shape=cut)
qplot(carat, price, data = diamonds, alpha = I(1/10))
qplot(carat, price, data = diamonds, alpha = I(1/100))
qplot(carat, price, data = diamonds, alpha = I(1/200))
qplot(carat)
qplot(carat, data = diamonds)
qplot(carat, price, data = dsmall, geom = c('point', 'smooth'))
qplot(carat, x*y*z, data = dsmall, geom = c('point', 'smooth'))
qplot(carat, x*y*z, data = diamonds, geom = c('point', 'smooth'))
qplot(carat, price, data = diamonds, geom = c('point', 'smooth'))
qplot(carat, price, data = dsmall, geom = c('point', 'smooth'))
cor(carat, price)
price
carat
carat <- diamonds.carat
diamonds
carat <- diamonds$carat
carat <- diamonds$price
carat <- diamonds$carat
price <- diamonds$price
cor(carat, price)
dsmall
cor(diamonds$depth, price)
qplot(carat, price, data = diamonds, geom = c('point', 'smooth'))
cor(price, carat)
qplot(carat, log(price), data = diamonds, geom = c('point', 'smooth'))
qplot(log(carat), log(price), data = diamonds, geom = c('point', 'smooth'))
qplot(carat, price, data = diamonds, geom = c('point', 'smooth'))
qplot(carat, price, data = dsmall, geom = c('point', 'smooth'))
uniform
runiform
rpois
rpois(100)
rpois(100, 10)
rpois(100, lambda = 10)
rpois(100, lambda = 100)
qplot(rpois(100, lambda = 100))
d2 <- diamonds[rpois(100, lambda = 100),]
qplot(carat, price, data = d2, geom = c('point', 'smooth'))
cor(d2)
d2
cor(d2$price, d2$carat)
qplot(carat, price, data = diamonds, geom = c('point', 'smooth'), method='loess')
qplot(carat, price, data = diamonds, geom = c('point', 'smooth'))
qplot(carat, price, data = dsmall, geom = c('point', 'smooth'))
qplot(carat, price, data = dsmall, geom = c('point', 'smooth'), span=0.2)
qplot(carat, price, data = dsmall, geom = c('point', 'smooth'), span=1)
qplot(carat, price, data = dsmall, geom = c('point', 'smooth'), method='rlm')
library('MASS')
qplot(carat, price, data = dsmall, geom = c('point', 'smooth'), method='rlm')
qplot(carat, price, data = dsmall, geom = c('point', 'smooth'), method='rlm',formula=y~ns(x,5))
library('mgcv')
qplot(carat, price, data = dsmall, geom = c('point', 'smooth'), method='rlm',formula=y~ns(x,5))
ns
s
qplot(carat, price, data = dsmall, geom = c('point', 'smooth'), method='rlm',formula=y~s(x,5))
qplot(carat, price, data = dsmall, geom = c('point', 'smooth'), method='rlm')
qplot(carat, price, data = dsmall, geom = c('point', 'smooth'))
qplot(carat, price, data = dsmall, geom = c('point', 'smooth'), se=FALSE)
qplot(carat, price, data = dsmall, geom = c('point', 'smooth'))
qplot(carat, price, data = dsmall, geom = c('point', 'smooth'), se=FALSE)
qplot(color, price/carat, data = diamonds, geom='boxplot')
dsmall
head(diamonds)
head(dsmall)
qplot(carat, data=diamonds, geom='histogram')
qplot(carat, data=diamonds, geom='density')
qplot(carat, data=diamonds, geom='histogram')
qplot(carat, data=diamonds, geom='density')
max(diamonds)
min
max
max(diamonds["carat"])
min(diamonds["carat"])
qplot(carat)
qplot(carat, data=diamonds, geom='histogram', binwidth=1, xlim=c(0,3))
qplot(carat, data=diamonds, geom='histogram', binwidth=0.5, xlim=c(0,3))
qplot(carat, data=diamonds, geom='histogram', binwidth=0.1, xlim=c(0,3))
qplot(carat, data=diamonds, geom='histogram', binwidth=0.01, xlim=c(0,3))
qplot(carat, data=diamonds, geom='histogram', binwidth=0.01, xlim=c(0,3), alpha=I(1/10))
qplot(carat, data=diamonds, geom='histogram', binwidth=0.01, xlim=c(0,3), alpha=I(1/100))
qplot(carat, data=diamonds, geom='histogram', binwidth=0.01, xlim=c(0,3)
)
qplot(carat, data=diamonds, geom='histogram', binwidth=0.01, xlim=c(0,5))
qplot(carat, data=diamonds, geom='histogram', binwidth=0.01, xlim=c(0,3))
qplot(carat, data=diamonds, geom='histogram', binwidth=0.01, xlim=c(0,3), colour=color)
qplot(carat, data=diamonds, geom='histogram', binwidth=0.01, xlim=c(0,3), fill=color)
qplot(carat, data=diamonds, geom='histogram', xlim=c(0,3), fill=color)
qplot(carat, data=diamonds, geom='histogram', fill=color)
qplot(carat, data=diamonds, geom='histogram', fill=color)
qplot(carat, data=diamonds, geom='histogram', fill=cut)
qplot(price, data=diamonds, geom='histogram', fill=cut)
qplot(price, data=diamonds, geom='histogram', fill=cut, xlim=c(0,3))
qplot(price, data=diamonds, geom='histogram', fill=cut)
qplot(price, data=diamonds, geom='histogram', xlim=c(0,3), fill=cut)
qplot(carat, data=diamonds, geom='density', colour=color)
qplot(carat, data=diamonds, geom='density', colour=cut)
qplot(carat, data=diamonds, geom='density', colour=color)
qplot(carat, data=diamonds, geom='density', colour=cut)
qplot(carat, data=diamonds, geom='density', colour=clarity)
qplot(carat, data=diamonds, geom='density', xlim=c(0,3), colour=clarity)
qplot(color, price/carat, geom='boxplot', data=diamonds)
qplot(cut, price/carat, geom='boxplot', data=diamonds)
qplot(cut, price/(x*y*z), geom='boxplot', data=diamonds)
qplot(date, unemploy/pop, data=economics, geom='line')
head('economics')
head(economics)
qplot(date, uempmed, data = economics, geom='line')
year <- function(x) as.POSIXlt(x)$year + 1900
qplot(unemploy/pop, uempmed, data=economics, geom=c('point', 'path'))
qplot(unemploy/pop, uempmed, data=economics, geom=c(path'))
qplot(unemploy/pop, uempmed, data=economics, geom=c(path')')
qplot(unemploy/pop, uempmed, data=economics, geom=c(path'))
''
qplot(unemploy/pop, uempmed, data=economics, geom=c('path'))
qplot(unemploy/pop, uempmed, data=economics, geom=c('point', path'))
''
qplot(unemploy/pop, uempmed, data=economics, geom=c('point', 'path'))
qplot(unemploy/pop, uempmed, data=economics, geom=c('point', 'path'), colour=year(date))
qplot(unemploy/pop, uempmed, data=economics, geom=c('path'), colour=year(date))
qplot(unemploy/pop, uempmed, data=economics, geom=c('path'), colour=year(date)) + scale_are()
qplot(unemploy/pop, uempmed, data=economics, geom=c('path'), colour=year(date)) + scale_area()
qplot(unemploy/pop, uempmed, data=economics, geom='path', colour=year(date)) + scale_area()
qplot(unemploy/pop, uempmed, data=economics, geom='path', colour=year(date)) + scale_area()
qplot(unemploy/pop, uempmed, data=economics, geom=c('point', 'path'))
qplot(unemploy/pop, uempmed, data=economics, geom=c('point', 'path'))
qplot(carat, data=diamonds, facets = color ~ ., geom = 'histogram', binwidth=0.1, xlim = c(0,3))
qplot(carat, ..density.., data=diamonds, facets = color ~ ., geom = 'histogram', binwidth=0.1, xlim = c(0,3))
qplot(carat, ..density.., data=diamonds, facets = cut ~ ., geom = 'histogram', binwidth=0.1, xlim = c(0,3))
qplot(price, ..density.., data=diamonds, facets = cut ~ ., geom = 'histogram', binwidth=0.1, xlim = c(0,3))
qplot(price, data=diamonds, facets = cut ~ ., geom = 'histogram', binwidth=0.1, xlim = c(0,3))
qplot(price, data=diamonds, facets = color ~ ., geom = 'histogram')
qplot(price, ..density.., data=diamonds, facets = color ~ ., geom = 'histogram')
qplot(price, ..density.., data=diamonds, facets = cut ~ ., geom = 'histogram')
qplot(price, ..density.., data=diamonds, facets = cut ~ ., binwidth=1000, geom = 'histogram')
qplot(price/carat, ..density.., data=diamonds, facets = cut ~ ., binwidth=1000, geom = 'histogram')
qplot(price/carat, ..density.., data=diamonds, facets = cut ~ ., binwidth=500, geom = 'histogram')
qplot(price/carat,  data=diamonds, facets = cut ~ ., binwidth=500, geom = 'histogram')
qplot(price/carat,  data=diamonds, facets = cut ~ ., binwidth=500, geom = 'histogram', xlim=c(0,10000))
qplot(price/carat,  data=diamonds, facets = cut ~ ., binwidth=100, geom = 'histogram', xlim=c(0,10000))
qplot(price,  data=diamonds, facets = cut ~ ., binwidth=100, geom = 'histogram', xlim=c(0,10000))
qplot(price,  data=diamonds, facets = cut ~ ., binwidth=100, geom = 'histogram', xlim=c(0,100000))
max(diamonds$price)
max(diamonds$carat)
18800/5
qplot(price/carat,  data=diamonds, facets = cut ~ ., binwidth=100, geom = 'histogram', xlim=c(0,10000))
qplot(price/carat,  data=diamonds, facets = color ~ ., binwidth=100, geom = 'histogram', xlim=c(0,10000))
qplot(price/carat,  data=diamonds, facets = color ~ cut., binwidth=100, geom = 'histogram', xlim=c(0,10000))
qplot(carat,  data=diamonds, facets = color ~ cut., binwidth=100, geom = 'histogram', xlim=c(0,10000))
qplot(carat,  data=diamonds, facets = color ~ cut., geom = 'histogram', xlim=c(0,10000))
qplot(carat,  data=diamonds, facets = color ~ cut., geom = 'histogram'
)
qplot(color,  data=diamonds, facets = color ~ cut., geom = 'histogram')
qplot(carat, price, data = dsmall, xlab="Price ($)", ylab='Peso (carats)', main='Preco-peso relacao')
qplot(carat, price, data = dsmall, xlab="Price ($)", ylab='Peso (carats)', main='Preco-peso relacao', geom=c('points', 'smooth'))
qplot(carat, price, data = dsmall, xlab="Price ($)", ylab='Peso (carats)', main='Preco-peso relacao', geom=c('point', 'smooth'))
qplot(carat, price/carat, data = dsmall, xlab="Price ($)", ylab='Peso (carats)', main='Preco-peso relacao', geom=c('point', 'smooth'))
source('~/Documents/projetos/phd-mario/software-projects/projects/evaluation_givemearide/summary_summary.r')
load("~/Documents/projetos/phd-mario/software-projects/projects/evaluation_givemearide/experiements_01_09_2012/workspace_r.RData")
View(`m10`)
View(`m2`)
View(`m20`)
View(`m29`)
View(`m5`)
View(`m2`)
View(`m10`)
View(`m20`)
View(`m10`)
fix(summaryExperiment)
fix(summaryExperiment)
setwd("~/Documents/projetos/phd-mario/software-projects/projects/robustworkflows/docs/experiment0")
agg <- function(experiment_ame) {
# assuming data in CSV format: time_block,EXPECTED_TIME_TO_SERVE_COMPOSITION,REAL_TIME_TO_SERVE_COMPOSITION,CLIENT_AGENT,SERVICES_ENGAGED
raw_data <- read.csv(file=experiment_name)
agg_data_time <- aggregate(data=raw_data, cbind(EXPECTED_TIME_TO_SERVE_COMPOSITION,REAL_TIME_TO_SERVE_COMPOSITION) ~ time_block, mean)
#agg_data_services_engaged <- aggregate(data=raw_data, cbind()
bla <- as.data.frame(table(raw_data$CLIENT_AGENT))
executed_compositions_per_service <- ggplot(data=bla) + geom_histogram(aes(x=Freq, y=..density..), color= "black", binwidth=5) + labs(title="Executed compositions per service", x="Number of Compositions", y="Density of services")
return (executed_compositions_per_service)
}
fix(agg)
?data
return expData
source('~/Documents/projetos/phd-mario/software-projects/projects/robustworkflows/docs/experiment0/prepare_experiment_data.R')
source('~/Documents/projetos/phd-mario/software-projects/projects/robustworkflows/docs/experiment0/prepare_experiment_data.R')
source('~/Documents/projetos/phd-mario/software-projects/projects/robustworkflows/docs/experiment0/prepare_experiment_data.R')
source('~/Documents/projetos/phd-mario/software-projects/projects/robustworkflows/docs/experiment0/prepare_experiment_data.R')
source('~/Documents/projetos/phd-mario/software-projects/projects/robustworkflows/docs/experiment0/prepare_experiment_data.R')
a <- agg(experiment_name="exp5_t100.csv")
library(ggplot2)
a <- agg(experiment_name="exp5_t100.csv")
source('~/Documents/projetos/phd-mario/software-projects/projects/robustworkflows/docs/experiment0/prepare_experiment_data.R')
a <- agg(experiment_name="exp5_t100.csv")
source('~/Documents/projetos/phd-mario/software-projects/projects/robustworkflows/docs/experiment0/prepare_experiment_data.R')
source('~/Documents/projetos/phd-mario/software-projects/projects/robustworkflows/docs/experiment0/prepare_experiment_data.R')
a <- agg(experiment_name="exp5_t100.csv")
source('~/Documents/projetos/phd-mario/software-projects/projects/robustworkflows/docs/experiment0/prepare_experiment_data.R')
a <- agg(experiment_name="exp5_t100.csv")
fix(a)
source('~/Documents/projetos/phd-mario/software-projects/projects/robustworkflows/docs/experiment0/prepare_experiment_data.R')
a <- agg(experiment_name="exp5_t100.csv")
fix(a)
raw_data <- read.csv(file="exp5_t100.csv")
View(raw_data)
a <- raw_data$REAL_TIME_TO_SERVE_COMPOSITION - raw_data$EXPECTED_TIME_TO_SERVE_COMPOSITION
fix(a)
ggplot(data=raw_data, aes(x=REAL_TIME_TO_SERVE_COMPOSITION-EXPECTED_TIME_TO_SERVE_COMPOSITION)) + geom_line() + geom_point(color="green")
ggplot(data=raw_data, aes(x = seq(1:101), y=REAL_TIME_TO_SERVE_COMPOSITION-EXPECTED_TIME_TO_SERVE_COMPOSITION)) + geom_line() + geom_point(color="green")
fix(a)
plot <- ggplot(data=bla) + geom_histogram(aes(x=Freq, y=..density..), color= "black", binwidth=5) + labs(title="Executed compositions per service", x="Number of Compositions", y="Density of services")
a <- c(33, 26, 69, 93)
dd <- as.data.frame(a)
dd
ggplot(data=dd, aes(x = seq(1:4), y=a)) + geom_line() + geom_point(color="green")
raw_data <- read.csv(file="exp_temp.csv")
raw_data <- read.csv(file="exp_temp.csv")
ggplot(data=raw_data, aes(x = seq(1:9321), y=REAL_TIME_TO_SERVE_COMPOSITION-EXPECTED_TIME_TO_SERVE_COMPOSITION)) + geom_line() + geom_point(color="green")
ggplot(data=raw_data[1:100,], aes(x = seq(1:100), y=REAL_TIME_TO_SERVE_COMPOSITION-EXPECTED_TIME_TO_SERVE_COMPOSITION)) + geom_line() + geom_point(color="green")
ggplot(data=raw_data[100:300,], aes(x = seq(100:300), y=REAL_TIME_TO_SERVE_COMPOSITION-EXPECTED_TIME_TO_SERVE_COMPOSITION)) + geom_line() + geom_point(color="green")
ggplot(data=raw_data[100:600,], aes(x = seq(100:600), y=REAL_TIME_TO_SERVE_COMPOSITION-EXPECTED_TIME_TO_SERVE_COMPOSITION)) + geom_line() + geom_point(color="green")
agg_data <- aggregate(data=raw_data, cbind(REAL_TIME_TO_SERVE_COMPOSITION, EXPECTED_TIME_TO_SERVE_COMPOSITION) ~ time_block, mean)
View(raw_data)
raw_data <- read.csv(file="exp_temp.csv")
agg_data <- aggregate(data=raw_data, cbind(REAL_TIME_TO_SERVE_COMPOSITION, EXPECTED_TIME_TO_SERVE_COMPOSITION) ~ time_block, mean)
ggplot(data=raw_data, aes(x = seq(1:642), y=REAL_TIME_TO_SERVE_COMPOSITION-EXPECTED_TIME_TO_SERVE_COMPOSITION)) + geom_line() + geom_point(color="green")
ggplot(data=raw_data[1:50,], aes(x = seq(1:50), y=REAL_TIME_TO_SERVE_COMPOSITION-EXPECTED_TIME_TO_SERVE_COMPOSITION)) + geom_line() + geom_point(color="green")
ggplot(data=raw_data[1:80,], aes(x = seq(1:80), y=REAL_TIME_TO_SERVE_COMPOSITION-EXPECTED_TIME_TO_SERVE_COMPOSITION)) + geom_line() + geom_point(color="green")
ggplot(data=raw_data[1:180,], aes(x = seq(1:180), y=REAL_TIME_TO_SERVE_COMPOSITION-EXPECTED_TIME_TO_SERVE_COMPOSITION)) + geom_line() + geom_point(color="green")
ggplot(data=raw_data[1:100,], aes(x = seq(1:100), y=REAL_TIME_TO_SERVE_COMPOSITION-EXPECTED_TIME_TO_SERVE_COMPOSITION)) + geom_line() + geom_point(color="green")
View(raw_data)
temp
temp <- data.frame(time_block=raw_data$time_block, delta=raw_data$REAL_TIME_TO_SERVE_COMPOSITION- raw_data$EXPECTED_TIME_TO_SERVE_COMPOSITION, services=raw_data=SERVICES_ENGAGED)
temp <- data.frame(time_block=raw_data$time_block, delta=raw_data$REAL_TIME_TO_SERVE_COMPOSITION- raw_data$EXPECTED_TIME_TO_SERVE_COMPOSITION, services=raw_data$SERVICES_ENGAGED)
agg_delta <- aggregate(data=temp, cbind(delta, services)~services, mean )
View(agg_data)
View(agg_delta)
agg_delta
sort(agg_delta)
sort(agg_delta$delta)
agg_delta[order(agg_delta$delta)]
order
?order
order(x=agg_delta$delta)
agg_delta[order(x=agg_delta$delta)]
agg_delta[order(agg_delta$delta),]
View(raw_data)
View(agg_delta)
View(temp)
temp[order(temp$services),]
temp[services=";3;9",]
temp[services==";3;9",]
temp[temp$services=";3;9",]
temp[temp$services==";3;9",]
temp[temp$services==";3;9",]
View(temp)
temp[temp$services=";3;9",]
temp[temp$services==";3;9",]
temp[temp$services=='';3;9',]
temp[temp$services==';3;9',]
temp[temp$time_block == "2013-09-09 19_45_53",]
temp[temp$services == "2013-09-09 19_45_53",]
temp[temp$services == "\;3\;9",]
temp[temp$services == ";3;9",]
temp[temp$services == ";7;1",]
temp[temp$services == ";7;1",]str(temp)
str(temp)
i <- sapply(temp, is.factor)
i
?sapply
temp[i]
str(i)
temp[i] <- sapply(temp[i], as.character)
str(temp)
temp
View(raw_data)
temp[temp$services=";3;9",]
temp[temp$services==";3;9",]
temp[temp$services==";3;88",]
temp[temp$services==";3;8",]
temp[temp$services==";3;9",]
str(temp)
temp[temp$time_block=="2013-09-09 18_50_07",]
temp[temp$time_block=="2013-09-09 18_28_40",]
temp[1:10,]
a<-temp[1:10,]
a[a$services==";7;1",]
a
temp[temp$services==";7;1",]
temp[temp$services==";3;9",]
temp[temp$services==";3;9",]
size(temp[temp$services==";3;9",])
length(temp[temp$services==";3;9",])
nrow(temp[temp$services==";3;9",])
ggplot(data=temp[temp$services==";3;9",], aes(x=seq(1:138), y=delta)) + geom_line() + geom_point(color="gree")
ggplot(data=temp[temp$services==";3;9",], aes(x=seq(1:138), y=delta)) + geom_line() + geom_point(color="green")
temp <- data.frame(time_block=raw_data$time_block, delta=raw_data$REAL_TIME_TO_SERVE_COMPOSITION - raw_data$EXPECTED_TIME_TO_SERVE_COMPOSITION, client=raw_data$CLIENT_AGENT, services=raw_data$SERVICES_ENGAGED)
A <-temp[temp$services==";3;9",]
View(A)
at every 43 seconds.... it increases the time to execute a service
raw_wf2 <- read.csv(file="exp_no_repeat.csv")
View(raw_wf2)
ggplot(data=raw_wf2, aes(x=seq(1:21), y=REAL_TIME_TO_SERVE_COMPOSITION-EXPECTED_TIME_TO_SERVE_COMPOSITION)) + geom_line() + geom_point(color="green")
raw_wf3 <- read.csv(file="exp_wf3.csv")
ggplot(data=raw_wf3, aes(x=seq(1:19), y=REAL_TIME_TO_SERVE_COMPOSITION-EXPECTED_TIME_TO_SERVE_COMPOSITION)) + geom_line() + geom_point(color="green")
View(raw_wf3)
View(raw_wf2)
View(raw_wf3)
ggplot(data=raw_wf3, aes(x=time_block, y=REAL_TIME_TO_SERVE_COMPOSITION-EXPECTED_TIME_TO_SERVE_COMPOSITION)) + geom_line() + geom_point(color="green")
raw_wf3 <- read.csv(file="exp_wf3.csv")
ggplot(data=raw_wf3, aes(x=seq(1:19), y=REAL_TIME_TO_SERVE_COMPOSITION-EXPECTED_TIME_TO_SERVE_COMPOSITION)) + geom_line() + geom_point(color="green")
ggplot(data=raw_wf3, aes(x=seq(1:25), y=REAL_TIME_TO_SERVE_COMPOSITION-EXPECTED_TIME_TO_SERVE_COMPOSITION)) + geom_line() + geom_point(color="green")
raw_wf4 <- read.csv(file="exp_wf4.csv")
ggplot(data=raw_wf4, aes(x=seq(1:19), y=REAL_TIME_TO_SERVE_COMPOSITION-EXPECTED_TIME_TO_SERVE_COMPOSITION)) + geom_line() + geom_point(color="green", size="big")
ggplot(data=raw_wf4, aes(x=seq(1:19), y=REAL_TIME_TO_SERVE_COMPOSITION-EXPECTED_TIME_TO_SERVE_COMPOSITION)) + geom_line() + geom_point(color="green", size="4")
ggplot(data=raw_wf4, aes(x=seq(1:19), y=REAL_TIME_TO_SERVE_COMPOSITION-EXPECTED_TIME_TO_SERVE_COMPOSITION)) + geom_line() + geom_point(aes(color="green")
)
ggplot(data=raw_wf4, aes(x=seq(1:19), y=REAL_TIME_TO_SERVE_COMPOSITION-EXPECTED_TIME_TO_SERVE_COMPOSITION)) + geom_line() + geom_point(aes(color="green"))
ggplot(data=raw_wf4, aes(x=nrows(raw_wf4), y=REAL_TIME_TO_SERVE_COMPOSITION-EXPECTED_TIME_TO_SERVE_COMPOSITION)) + geom_line() + geom_point(aes(color="green"))
ggplot(data=raw_wf4, aes(x=seq(1:nrows(raw_wf4)), y=REAL_TIME_TO_SERVE_COMPOSITION-EXPECTED_TIME_TO_SERVE_COMPOSITION)) + geom_line() + geom_point(aes(color="green"))
ggplot(data=raw_wf4, aes(x=seq(1:nrow(raw_wf4)), y=REAL_TIME_TO_SERVE_COMPOSITION-EXPECTED_TIME_TO_SERVE_COMPOSITION)) + geom_line() + geom_point(aes(color="green"))
lm(wight ~ group)
lm(weight ~ group)
lm(raw_rf4)
lm(raw_wf4)
View(raw_wf4)
lm(raw_wf4 ~ raw_wf4$REAL_TIME_TO_SERVE_COMPOSITION)
lm(raw_wf4 ~ REAL_TIME_TO_SERVE_COMPOSITION)
ctl <- c(4.17,5.58,5.18,6.11,4.50,4.61,5.17,4.53,5.33,5.14)
trt <- c(4.81,4.17,4.41,3.59,5.87,3.83,6.03,4.89,4.32,4.69)
group <- gl(2, 10, 20, labels = c("ctl", "Trt"))
weight <- c(ctl, Trt)
weight <- c(ctl, trt)
?gl
group
str(group)
fix(group)
group
g <- gl(3,5, labels =c("a","b","c"))
g
rm(g)
weight <- c(ctl, trt)
fix(weight)
lm(weight ~ group)
lm.d9 <- lm(weight ~ group)
plot(lm.d9, las=1)
plot(lm.d9)
delta <- raw_wf4$REAL_TIME_TO_SERVE_COMPOSITION - raw_wf4$EXPECTED_TIME_TO_SERVE_COMPOSITION
x <- seq(1:15)
plot(x, delta)
lm.r <- lm(delta ~ x)
lm.r
fit <- -42811 + 42899 * x
lines(x, fit)
fit <- -42811 + 59511 * x
lines(x, fit)
raw_wf4 <- read.csv(file="exp_wf4.csv")
delta <- raw_wf4$REAL_TIME_TO_SERVE_COMPOSITION - raw_wf4$EXPECTED_TIME_TO_SERVE_COMPOSITION
x <- seq(1:30)
lm.r <- lm(delta ~ x)
lm.r
fit <- -42785 + 42895 * x
lines(x, fit)
raw_4 <- read.csv(file="exp4.csv")
ggplot(data=raw_4, aes(x=seq(1:nrows(raw_4)), y=REAL_TIME_TO_SERVE_COMPOSITION-EXPECTED_TIME_TO_SERVE_COMPOSITION)) + geom_line() + geom_point(aes(color="green"))
ggplot(data=raw_4, aes(x=seq(1:nrow(raw_4)), y=REAL_TIME_TO_SERVE_COMPOSITION-EXPECTED_TIME_TO_SERVE_COMPOSITION)) + geom_line() + geom_point(aes(color="green"))
ggplot(data=raw_4[1:100,], aes(x=seq(1:100), y=REAL_TIME_TO_SERVE_COMPOSITION-EXPECTED_TIME_TO_SERVE_COMPOSITION)) + geom_line() + geom_point(aes(color="green"))
ggplot(data=raw_4[1:300,], aes(x=seq(1:300), y=REAL_TIME_TO_SERVE_COMPOSITION-EXPECTED_TIME_TO_SERVE_COMPOSITION)) + geom_line() + geom_point(aes(color="green"))
raw_4[1:100]
raw_4[1:100,]
View(raw_4)
raw_4[(raw_4$REAL_TIME_TO_SERVE_COMPOSITION - raw_4$EXPECTED_TIME_TO_SERVE_COMPOSITION) > 2000000,]
nrow(raw_4[(raw_4$REAL_TIME_TO_SERVE_COMPOSITION - raw_4$EXPECTED_TIME_TO_SERVE_COMPOSITION) > 2000000,])
outliers <- raw_4[(raw_4$REAL_TIME_TO_SERVE_COMPOSITION - raw_4$EXPECTED_TIME_TO_SERVE_COMPOSITION) > 2000000,]
ggplot(data=outliers, aes(x=seq(1:338), y=REAL_TIME_TO_SERVE_COMPOSITION-EXPECTED_TIME_TO_SERVE_COMPOSITION)) + geom_line() + geom_point(aes(color="green"))
raw_4[raw_4$SERVICES_ENGAGED == ";36;9"]
raw_4[raw_4$SERVICES_ENGAGED == ";36;9",]
View(outliers)
nrow(raw_4[raw_4$SERVICES_ENGAGED == ";36;9",])
ggplot(data=raw_4[raw_4$SERVICES_ENGAGED == ";36;9",], aes(x=seq(1:113), y=REAL_TIME_TO_SERVE_COMPOSITION-EXPECTED_TIME_TO_SERVE_COMPOSITION)) + geom_line() + geom_point(aes(color="green"))
ggplot(data=raw_4[raw_4$SERVICES_ENGAGED == ";36;9",], aes(x=seq(1:113), y=REAL_TIME_TO_SERVE_COMPOSITION-EXPECTED_TIME_TO_SERVE_COMPOSITION)) + geom_line()
ggplot(data=raw_4[raw_4$SERVICES_ENGAGED == ";36;9",], aes(x=seq(1:113), y=REAL_TIME_TO_SERVE_COMPOSITION-EXPECTED_TIME_TO_SERVE_COMPOSITION)) + geom_line() + geom_point(color="green")
geom_smooth()
ggplot(data=raw_4[raw_4$SERVICES_ENGAGED == ";36;9",], aes(x=seq(1:113), y=REAL_TIME_TO_SERVE_COMPOSITION-EXPECTED_TIME_TO_SERVE_COMPOSITION)) + geom_line() + geom_point(color="green") + geom_smooth(se=FALSE)
table(outliers ~ outliers$SERVICES_ENGAGED)
table(outliers$SERVICES_ENGAGED)
View(outliers)
table(raw_4$SERVICES_ENGAGED)
table(outliers$SERVICES_ENGAGED)
outliers[outliers$SERVICES_ENGAGED==";36;11"]
outliers[outliers$SERVICES_ENGAGED==";36;11",]
nrow(outliers[outliers$SERVICES_ENGAGED==";36;11",])
nrow(outliers[outliers$SERVICES_ENGAGED==";36;9",])
